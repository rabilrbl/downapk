name: Build for extra platforms

on:
  release:
    types: [created]
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            filename: downapk-linux-aarch64
          - target: aarch64-linux-android
            filename: downapk-android-aarch64
          - target: armv7-unknown-linux-gnueabihf
            filename: downapk-linux-armv7
          - target: armv7-linux-androideabi
            filename: downapk-android-armv7
          - target: x86_64-linux-android
            filename: downapk-android-x86_64
          - target: i686-unknown-linux-gnu
            filename: downapk-linux-i686

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust
        run: |
          rustup update --no-self-update stable
          rustup component add --toolchain stable rustfmt rust-src
          rustup default stable

      - name: Setup Cache
        uses: actions/cache@v4
        env:
          cache-name: cache-cargo-${{ matrix.target }}
        with:
          path: |
            ~/.cargo
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.target }}-

      - name: Install dependencies
        run: |
          cargo install cross --git https://github.com/cross-rs/cross

      - name: Build ${{ matrix.target }}
        run: cross build --release --target ${{ matrix.target }}

      - name: Upload unix-like binaries to release
        uses: svenstaro/upload-release-action@v2
        if: contains(matrix.target, 'windows') == false
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.target }}/release/downapk
          asset_name: ${{ matrix.filename }}
          tag: ${{ github.ref }}
          file_glob: false
