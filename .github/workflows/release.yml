name: Build and Upload Rust Binaries

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            filename: downapk-x86_64-linux
          - os: macos-latest
            target: x86_64-apple-darwin
            filename: downapk-x86_64-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            filename: downapk-x86_64-windows.exe
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            filename: downapk-aarch64-linux
          - os: macos-latest
            target: aarch64-apple-darwin
            filename: downapk-aarch64-darwin

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install dependencies for aarch64 linux
      if: matrix.target == 'aarch64-unknown-linux-gnu'
      run: sudo apt-get update -y && sudo apt-get install -y g++-aarch64-linux-gnu libc6-dev-arm64-cross

    - name: Install Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.target }}

    - name: Add target
      run: |
       rustup target add ${{ matrix.target }}
       rustup toolchain install stable-${{ matrix.target }}

    - name: Build for non-aarch64 linux
      if: matrix.target != 'aarch64-unknown-linux-gnu'
      run: cargo build --release --target ${{ matrix.target }}

    - name: Build for aarch64 linux
      if: matrix.target == 'aarch64-unknown-linux-gnu'
      run: cargo build --release --target ${{ matrix.target }}
      env:
        CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER: aarch64-linux-gnu-gcc
        CC_aarch64_unknown_linux_gnu: aarch64-linux-gnu-gcc
        CXX_aarch64_unknown_linux_gnu: aarch64-linux-gnu-g++

    - name: Upload unix-like binaries to release
      uses: svenstaro/upload-release-action@v2
      if: contains(matrix.target, 'windows') == false
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/${{ matrix.target }}/release/downapk
        asset_name: ${{ matrix.filename }}
        tag: ${{ github.ref }}
        file_glob: false

    - name: Upload windows binaries to release
      uses: svenstaro/upload-release-action@v2
      if: contains(matrix.target, 'windows') == true
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: target/${{ matrix.target }}/release/downapk.exe
        asset_name: ${{ matrix.filename }}
        tag: ${{ github.ref }}
        file_glob: false